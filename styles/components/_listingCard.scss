.listingCard {
  width: 225px;
  height: 283px;
  font-size: $tx5b;
  cursor: pointer;
  position: relative;
  bottom: 0;
  transition: all .2s ease;

  &:focus {
    outline: none;
  }

  .gridViewContent {
    .listingImage {
      width: 223px;
      height: 225px;
      position: relative;
      background-size: cover;
      background-position: center;
    }

    .infoArea {
      position: relative;

      .toolTip {
        &::after, &::before {
          z-index: 2;
        }
      }
    }

    .listingIcons {
      position: absolute;
      top: 8px;
      right: 8px;
    }

    .userIconWrapper {
      position: absolute;
      z-index: 1;
      top: -#{$thumb / 2};
      right: 8px;

    }

    .trimWidth {
      width: calc(100% - #{$thumb});
    }
  }

  .overlayPanel {
    display: none;
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: 1; // so it's above the overlay icons

    .overlayPanelInner {
      // Using seperate element just for the overlay so that
      // the opacity doesn't affect the buttons, but we could
      // still use the clrS class (instead of RGBA).
      opacity: 0.9;
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
    }
  }

  .blockedAvatarOverlay {
    display: none;

    i {
      font-size: 1.9rem;
    }
  }

  .nsfwOverlay, .nsfwAvatarOverlay {
    display: none;
  }

  .editOverlay {
    // collapse the overlay so it doesn't block the verified moderator badge
    top: auto;
    right: auto;
    left: 50%;
    transform: translateX(-50%);
    margin: 0 auto;

    .btn {
      z-index: 1;
    }
  }

  .listingsGrid:not(.listingsGridListView) &:hover {
    bottom: 4px;
  }

  &:hover:not(.listingDeleting):not(.listingDeleted) {
    .editOverlay {
      display: flex;
    }
  }

  .btnShowNsfw {
    display: none;
  }

  .reportBtnShell {
    button {
      width: 30px;
      height: 30px;
    }
  }

  .additionalOverlay {
    top: auto;
  }

  &:hover {
    .additionalOverlay {
      display: flex;
    }
  }

  .verifiedModWrapper {
    position: absolute;
    top: 0;
    width: 100%;

    .verifiedMod {
      left: $padSm;
      top: $padSm;
    }
  }

  .deleteOverlay {
    align-items: center;
    justify-content: center;

    .deletingText, .deletedText {
      display: none;
      text-align: center;
    }
  }

  .deleteConfirm {
    transform: translate(-50%, -100%);
    top: -12px;
    left: 8px;
  }

  &.listingDeleting,
  &.listingDeleted {
    cursor: default;
    pointer-events: none;

    .deleteOverlay {
      display: flex;

      .deletingText, .deletedText {
        z-index: 1;
      }
    }
  }

  &.listingDeleting {
    .deleteOverlay {
      .deletingText {
        display: block;
      }

      .deletedText {
        display: none;
      }
    }
  }

  &.listingDeleted {
    .deleteOverlay {
      .deletingText {
        display: none;
      }

      .deletedText {
        display: block;
      }
    }
  }

  .listViewContent {
    display: none;

    .listingImage {
      width: 45px;
      height: 45px;
      background-size: cover;
    }

    .verifiedModWrapper {
      position: static;
      bottom: 0;

      .verifiedMod {
        position: static;

        .badge {
          height: 1em;
          width: 1em;
        }

        .arrowBoxWrapper {
          width: 1em;

          .arrowBox {
            right: -25px;
            top: auto;
            // calc from the bottom of the arrowBoxWrapper plus its height plus the badge height
            // plus a buffer so it doesn't flicker when you move the mouse over the arrowBox
            bottom: calc(100% + 10px + 1em + 5px);



            &::before {
              top: 100%;
              transform: translate(-50%,-50%) rotate(45deg);
            }
          }
        }
      }
    }
  }

  // Some assumptions here:
  // a.) We will only potentially have a "list view" style card
  //     when the listingCard is inside a .listingsGrid.
  // b.) The .listingsGridListView class will be applied to the
  //     .listingsGrid element as opposed to each individual card.
  //     This is so as you toggle to/from grid/list view, you only
  //     change one class on a parent element and consequently have
  //     only one DOM reflow/repaint.
  .listingsGridListView & {
    padding: $pad;
    display: block;
    width: 100%;
    height: auto;

    .listViewContent {
      display: block;
    }

    .gridViewContent {
      display: none;
    }

    // This isn't ideal, but there's inconistent spacing / widths of cols, plus there's variable
    // content width on the price (e.g. some currencies may have quite large numbers)
    .priceCol {
      padding-right: 20px;
    }

    .freeShipCol {
      padding-right: 20px;
    }
  }

  &.blocked {
    .blockedOverlay, .blockedAvatarOverlay {
      display: block;
    }
  }

  &.hideNsfw {
    .nsfwOverlay, .nsfwAvatarOverlay {
      display: block;
    }

    .additionalOverlay {
      .btnShowNsfw {
        display: block;
      }
    }

    .listingsGridListView & {
      .listingImage {
        opacity: 0;
      }
    }

    .btnHideNsfw {
      display: none;
    }
  }
}
