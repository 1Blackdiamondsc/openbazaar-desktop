.box {
  display: block;
  box-sizing: border-box;
  position: relative;
  overflow: hidden; //this clears floats and prevents content from breaking out of the box
  //if the container is absolutely positioned, it will usually need a width applied
}


.bar {
  @extend .box;
  height: $bar;
  padding: 0 $pad;

  input: {
    height: 100%;
    padding: $pad;
  }
}

.disc {
  //the disc can contain an image or an icon, and is usually a clickable element
  @extend .box;
  box-sizing: border-box;
  border-radius:50%;
  width: 42px;
  height: 42px;
  //fill the disc with any background image
  background-position: center;
  background-size: cover;
}

.border {
  //use on wrapping containers that should have a border. The element should also have a colBorder class.
  border-width: 1px;
  border-style: solid;
}

.borderBottom {
  //use to separate stacked containers. The element should also have the colBorder class.
  border-bottom: {
    width: 1px;
    style: solid;
    color: inherit;
  }

}

.borderStacked > * {
  //use on parent element to separate stacked child containers. The element should also have the colBorder class.
  @extend .borderBottom;

  &:last-child {
    border-bottom: none;
  }
}

//containers should have one of the standard padding sizes
//padKids classes go on wrapper elements, to make all direct children have that padding

.padSm,
.padSmKids > * {
  padding: $pad / 2;
}

.pad,
.padKids > * {
  padding: $pad;
}

.padBg,
.padBgKids > * {
  padding: $pad * 2;
}
//elements should hae standard spacing between them vertically. There shouldn't be more than a few row classes.

.rowSm {
  margin-bottom: $row / 2;

}
.row {
  margin-bottom: $row;
}

.rowBg {
  margin-bottom: $row * 2;
}

.margRSm {
  margin-right: $marg / 2;
}

.margR {
  margin-right: $marg;
}

.margLSm {
  margin-left: $marg / 2;
}

.margL {
  margin-left: $marg;
}

.gutterHSm > * {
  margin-right: $marg / 2;

  &:last-child {
    margin-right: 0;
  }
}

.gutterH > * {
  margin-right: $marg;

  &:last-child {
    margin-right: 0;
  }
}

.gutterHBg > * {
  margin-right: $marg * 2;

  &:last-child {
    margin-right: 0;
  }
}

.gutterVSm > * {
  margin-bottom: $marg / 2;

  &:last-child {
    margin-bottom: 0;
  }
}

.gutterV > * {
  margin-bottom: $marg;

  &:last-child {
    margin-bottom: 0;
  }
}

.gutterVBg > * {
  margin-bottom: $marg * 2;

  &:last-child {
    margin-bottom: 0;
  }
}
