html {
  // fonts
  color: $text;
  font: {
    family: "Helvetica Neue", Helvetica, Arial, sans-serif;
    size: $baseFontSize;
    weight: 400;
  }
  -webkit-font-smoothing: antialiased;
  letter-spacing: 0.4px;
  line-height: 1.2;
}

body {
  background-color: $background;
  overflow: hidden;
  margin: 0;
}

a {
  text-decoration: none;
  cursor: pointer;
  -webkit-user-drag: none;
  transition: color .15s  cubic-bezier(0, 0, 0.2, 1);
  color: inherit;

  &:hover,
  &:focus {
    text-decoration: underline;
  }
}

hr {
  border: none;
  border-bottom: 1px solid;
  -webkit-margin-before: 0.5em;
  -webkit-margin-after: 0.5em;

  &.unleaded {
    -webkit-margin-before: 0;
    -webkit-margin-after: 0;
  }
}

ul {
  margin: 0;
}

input::-webkit-input-placeholder,
select::-webkit-input-placeholder,
textarea::-webkit-input-placeholder {
  color: inherit;
  opacity: 0.35;
}


input,
select,
textarea {
  border: none;
  outline: none;
  background: none;
  color: inherit;
}

select {
  width: 100%;
}

textarea {
  background: none;
  outline: none;
  -webkit-appearance: none;
  resize: none;
}

input[type="text"],
textarea {
  border-style: solid;
  border-width: 1px;
  //use the color class to set the border color
  width: 100%;
  box-sizing: border-box;
  padding: 0 $pad;
  line-height: 40px;
}

form {
  margin: 0;
  font-size: $tx5;

  label {
    line-height: $formElementHeight;
  }
}

ul, ol {
  &.unstyled {
    padding: 0;

    li {
      list-style-type: none;
    }
  }
}

#ov1 .hide {
  display: none;
}

#ov1 .disabled {
  @include disabled;
}

#appFrame {
  position: absolute;
  height: 100%;
  width: 100%;

  // index containers and sections
  #pageNavContainer {
    position: relative;
    z-index: 2;
  }

  #contentFrame {
    height: 100%;

    #pageContainer {
      padding-top: $barLg;
      position: relative;
      overflow-y: scroll;
      height: calc(100% - #{$bar});
      box-sizing: border-box;

      #pageTabBar.bar {
        position: fixed;
        top: $bar;
        left: 0;
        width: 100%;

        .tab.active {

        }
      }

      .pageContent {
        padding: $padHg $padHg $padHg $padHg;
        width: $pageWidth;
        box-sizing: border-box;
        margin: 0 auto;
      }

      #chatLeftSpacer {
        width: $chatClosed; //this spacer can collapse if there isn't enough space
        @include chatOpeningTransition(width);

        .chatOpen & {
          width: $chatOpen;
        }
      }

      #chatRightSpacer {
        flex: 0 0;
        min-width: $chatClosed; //this spacer will not collapse

        .chatOpen & {
          min-width: $chatOpen;
        }
      }
    }

    #chatContainer {
      position: fixed;
      top: 105px;
      right: 0;
      width: $chatClosed;
      height: calc(100% - 100px);
      z-index: 1; // chat needs to be on top of modals
      @include chatOpeningTransition(width);

      .chatOpen & {
        width: $chatOpen;
      }
    }
  }
}

// temporary status bar implementation
#statusBarContainer {
  color: black; // use color var when refactoring
  background-color: rgba(0,0,0,0.3); // use color var when refactoring
  height: 20px;
  position: fixed;
  bottom: 0;
  left: 0;
  right: 0;
  font-size: 16px;  // use rem when refactoring
  padding: 5px;

  &::after {
    content: '(temporary Walmart of status bars)';
    position: absolute;
    right: 5px;
    top: 5px;
  }
}

