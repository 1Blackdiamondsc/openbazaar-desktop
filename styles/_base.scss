body {
  background-color: $background;
  overflow: hidden;
  /*fonts*/
  color: $text;
  font: {
    family: "Helvetica Neue", Helvetica, Arial, sans-serif;
    size: $baseFontSize;
    weight: 400;
  }
  -webkit-font-smoothing: antialiased;
  letter-spacing: 0.4px;
  line-height: 1.2;
  margin: 0;
}

a {
  text-decoration: none;
  cursor: pointer;
  -webkit-user-drag: none;
  transition: color .15s  cubic-bezier(0, 0, 0.2, 1);

  &:hover,
  &:focus {
    text-decoration: underline;
  }
}

hr {
  border: none;
  border-bottom: 1px solid;
  -webkit-margin-before: 0.5em;
  -webkit-margin-after: 0.5em;
}

ul {
  margin: 0;
}

input::-webkit-input-placeholder,
select::-webkit-input-placeholder,
textarea::-webkit-input-placeholder {
  color: $text3;
}

input,
select,
textarea {
  border: none;
  outline: none;
}

textarea {
  background: none;
  outline: none;
  -webkit-appearance: none;
  width: 100%;
  resize: none;
  box-sizing: border-box;
  border: 1px solid transparent;
  transition: border 0.3s;
}

textarea:focus {
  border: 1px solid #fff;
  outline: none;
}

form {
  margin: 0;
}

// theme color styles. All elements that have a background color should have one of these applied.
// The text class will be applied to the body element, if text is colored differently, apply it to the nearest
// parent container.

.colPrimary {
  background-color: $primary;
}

.colSecondary {
  background-color: $secondary;
}

.colBackground {
  background-color: $background;
}

.colText {
  color: $text;

  & a:not(.btn, .iconBtn) {
    color: $text2;
  }
}

.colText2 {
  //for faded text
  color: $text2;

  & a:not(.btn, .iconBtn) {
    color: $text3;
  }
}

.colText3 {
  //use when text2 needs to be "activated"
  color: $text3;

  //links in text color 3 are the same color, or they'd be too hard to see
}

.colBorder {
  border-color: $border;
}

.colBorderBackground {
  background-color: $border;
}

.colEmphasis1 {
  background-color: $emphasis1;
}

#pageNavContainer {
  position: relative;
  z-index: 2;
}

#contentArea {
  position: relative;
  z-index: 1;
}

#pageContainer {
  position: relative;
  // temporary until we have a loading modal
  &:empty::after {
    content: "Loading...";
    font-size: 30px;
  }
}

#chatContainer {
  position: fixed;
  top: 100px;
  right: 0;
  width: $chatClosed;
  .chatOpen & {
    width: $chatOpen;
  }
}
